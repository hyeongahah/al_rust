/* 3 또는 5의 배수인 10 아래의 모든 자연수를 나열하면 3,5,6과 9를 얻는다. 이 배수들의 합은 23이다. 1000 아래의 3 또는 5의 모든 배수의 합을 구하라. */

#[test] // 그 다음에 정의되는 함수가 테스트 목적으로만 사용되는 함수라는 걸 컴파일러에게 알려줌
        // 테스트를 수행하는 함수 앞에 사용되는 키워드
fn test() {
    assert_eq!(23, get_sum(10)); // get_sum(10)의 리턴값이 23이면 '성공' 아니면 '실패'로 처리하고 테스트 수행을 멈추라는 의미
    assert_eq!(233168, get_sum(1000));
    assert_eq!(233333333166666668, get_sum(1000000000));
}

#[cfg(test)] // 그 다음에 나오는 모듈 또는 함수가 테스트 목적임을 컴파일러에게 알려줌
             // 테스트 함수들의 사용하는 라이브러리 성격의 함수들 앞에 붙는 키워드
             // 없으면 main에서 호출되지 않았기 때문에 사용되지 않는 함수라는 경고가 뜬다
fn get_sum(bound: u64) -> u64 {
    let mut sum = 0;
    for i in 3..bound {
        if i % 3 == 0 || i % 5 == 0 {
            sum += i;
        }
    }
    println!("bound={}, sum={}", bound, sum);
    return sum;
}
